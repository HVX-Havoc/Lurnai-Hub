-- Load the library
local Library, SaveManager, InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/HVX-Havoc/Lurnai-Hub/refs/heads/main/Github/UI/LurnaiHub_Library.lua"))()

-- Create window
local Window = Library:CreateWindow({
    Title = "Speed Hub X",
    SubTitle = "by AhmadV99",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 460),
    Acrylic = true,
    Theme = "LurnaiHub"
})

-- Create tabs
local MainTab = Window:AddTab({ Title = "Main", Icon = "home" })
local SettingsTab = Window:AddTab({ Title = "Settings", Icon = "settings" })

-- Add elements to main tab
local MainSection = MainTab:AddSection("Main Features")

MainSection:AddToggle("AutoFarm", {
    Title = "Auto Farm",
    Description = "Automatically farms for you",
    Default = false,
    Callback = function(Value)
        print("Auto Farm:", Value)
    end
})

MainSection:AddSlider("WalkSpeed", {
    Title = "Walk Speed",
    Description = "Changes your walk speed",
    Default = 16,
    Min = 16,
    Max = 100,
    Rounding = 1,
    Callback = function(Value)
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = Value
    end
})

-- Add config management to settings
SaveManager:SetLibrary(Library)
InterfaceManager:SetLibrary(Library)
SaveManager:SetFolder("MyScript/Configs")
InterfaceManager:SetFolder("MyScript/Interface")

-- Build config section
SaveManager:BuildConfigSection(SettingsTab)
InterfaceManager:BuildInterfaceSection(SettingsTab)

-- Load autoload config
SaveManager:LoadAutoloadConfig()




local Library, SaveManager, InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/AhmadV99/Main/refs/heads/main/Library/V4.lua"))()

-- Now you can use the library
local Window = Library:CreateWindow({
    Title = "My Script",
    SubTitle = "Version 1.0",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 460),
    Acrylic = true,
    Theme = "SpeedHubX"
})

-- Add tabs and elements
local Tab = Window:AddTab({ Title = "Main", Icon = "home" })
local Section = Tab:AddSection("Controls")

Section:AddButton({
    Title = "Test Button",
    Description = "Click me!",
    Callback = function()
        print("Button clicked!")
    end
}) add everything to this


local Library, SaveManager, InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/AhmadV99/Main/refs/heads/main/Library/V4.lua"))()

-- Create Window
local Window = Library:CreateWindow({
    Title = "Element Showcase",
    SubTitle = "One of Everything",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 460),
    Acrylic = true,
    Theme = "SpeedHubX"
})

-- Single Tab with Everything
local Tab = Window:AddTab({ Title = "Showcase", Icon = "home" })
local Section = Tab:AddSection("All Elements")

-- Button
Section:AddButton({
    Title = "Test Button",
    Description = "Click me!",
    Callback = function()
        print("Button clicked!")
    end
})

-- Toggle
Section:AddToggle("TestToggle", {
    Title = "Test Toggle",
    Description = "Toggle me!",
    Default = false,
    Callback = function(Value)
        print("Toggle:", Value)
    end
})

-- Slider
Section:AddSlider("TestSlider", {
    Title = "Test Slider",
    Description = "Slide me!",
    Default = 50,
    Min = 0,
    Max = 100,
    Rounding = 1,
    Callback = function(Value)
        print("Slider:", Value)
    end
})

-- Dropdown
Section:AddDropdown("TestDropdown", {
    Title = "Test Dropdown",
    Description = "Select an option!",
    Values = {"Option 1", "Option 2", "Option 3"},
    Multi = false,
    Default = "Option 1",
    Callback = function(Value)
        print("Selected:", Value)
    end
})

-- Multi-Dropdown
Section:AddDropdown("TestMultiDropdown", {
    Title = "Multi Dropdown",
    Description = "Select multiple!",
    Values = {"Item A", "Item B", "Item C", "Item D"},
    Multi = true,
    Default = {"Item A"},
    Callback = function(Value)
        print("Multi-Selected:", table.concat(Value, ", "))
    end
})

-- Input/TextBox
Section:AddInput("TestInput", {
    Title = "Test Input",
    Description = "Type something!",
    Default = "Hello World",
    Placeholder = "Enter text...",
    Numeric = false,
    Callback = function(Value)
        print("Input:", Value)
    end
})

-- Numeric Input
Section:AddInput("TestNumericInput", {
    Title = "Numeric Input",
    Description = "Numbers only!",
    Default = "123",
    Placeholder = "Enter number...",
    Numeric = true,
    Callback = function(Value)
        print("Number:", Value)
    end
})

-- Color Picker
Section:AddColorpicker("TestColorpicker", {
    Title = "Test Color Picker",
    Description = "Pick a color!",
    Default = Color3.fromRGB(255, 255, 255),
    Transparency = 0,
    Callback = function(Value, Transparency)
        print("Color:", Value, "Transparency:", Transparency)
    end
})

-- Keybind
Section:AddKeybind("TestKeybind", {
    Title = "Test Keybind",
    Description = "Press a key!",
    Default = "E",
    Mode = "Toggle", -- "Toggle", "Hold", "Always"
    Callback = function(Value, Mode)
        print("Keybind:", Value, "Mode:", Mode)
    end
})

-- Paragraph/Label
Section:AddParagraph({
    Title = "Information",
    Content = "This is a paragraph element that displays text information to users. It's useful for instructions or descriptions."
})

print("ðŸŽ‰ Showcase loaded! Try all the elements above!")
