local LibraryURL = "https://raw.githubusercontent.com/HVX-Havoc/Lurnai-Hub/refs/heads/main/Github/UI/LurnaiHub_Library.lua"
local Library, SaveManager, InterfaceManager = loadstring(game:HttpGet(LibraryURL))()
local WindowTitle = "Lurnai Hub | Grow A Garden"
local WindowSubTitle = "By Havoc"
local WindowTabWidth = 160
local WindowSizeX = 380
local WindowSizeY = 360
local WindowAcrylic = true
local WindowTheme = "LurnaiHub"
local Window = Library:CreateWindow({
    Title = WindowTitle,
    SubTitle = WindowSubTitle,
    TabWidth = WindowTabWidth,
    Size = UDim2.fromOffset(WindowSizeX, WindowSizeY),
    Acrylic = WindowAcrylic,
    Theme = WindowTheme
})
local HomeIcon = "house"
local HomeTitle = "Home"
local MainIcon = "gamepad-2"
local MainTitle = "Main"
local AutoIcon = "zap"
local AutoTitle = "Auto Farm"
local InventoryIcon = "package"
local InventoryTitle = "Inventory"
local ShopIcon = "shopping-cart"
local ShopTitle = "Shop"
local MiscIcon = "more-horizontal"
local MiscTitle = "Misc"
local SettingsIcon = "settings"
local SettingsTitle = "Settings"
local UISettingsIcon = "monitor"
local UISettingsTitle = "UI Settings"
local Home = Window:AddTab({
    Title = HomeTitle,
    Icon = HomeIcon
})
local Main = Window:AddTab({
    Title = MainTitle,
    Icon = MainIcon
})
local Automatically = Window:AddTab({
    Title = AutoTitle,
    Icon = AutoIcon
})
local Inventory = Window:AddTab({
    Title = InventoryTitle,
    Icon = InventoryIcon
})
local Shop = Window:AddTab({
    Title = ShopTitle,
    Icon = ShopIcon
})
local Misc = Window:AddTab({
    Title = MiscTitle,
    Icon = MiscIcon
})
local Settings = Window:AddTab({
    Title = SettingsTitle,
    Icon = SettingsIcon
})
local SettingsUI = Window:AddTab({
    Title = UISettingsTitle,
    Icon = UISettingsIcon
})
local MainSection = MainTab:AddSection("")

MainSection:AddToggle("", {
    Title = "",
    Description = "",
    Default = false,
    Callback = function(Value)
    end
})

MainSection:AddSlider("", {
    Title = "",
    Description = "",
    Default = 0,
    Min = 0,
    Max = 0,
    Rounding = ,
    Callback = function(Value)
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = Value
    end
})

MainSection:AddParagraph({
    Title = "Information",
    Content = "This is a paragraph element that displays text information to users. It's useful for instructions or descriptions."
})

MainSection:AddKeybind("TestKeybind", {
    Title = "Test Keybind",
    Description = "Press a key!",
    Default = "E",
    Mode = "Toggle", -- "Toggle", "Hold", "Always"
    Callback = function(Value, Mode)
        print("Keybind:", Value, "Mode:", Mode)
    end
})

MainSection:AddButton({
    Title = "Test Button",
    Description = "Click me!",
    Callback = function()
        print("Button clicked!")
    end
})

-- Toggle
MainSection:AddToggle("TestToggle", {
    Title = "Test Toggle",
    Description = "Toggle me!",
    Default = false,
    Callback = function(Value)
        print("Toggle:", Value)
    end
})

-- Slider
MainSection:AddSlider("TestSlider", {
    Title = "Test Slider",
    Description = "Slide me!",
    Default = 50,
    Min = 0,
    Max = 100,
    Rounding = 1,
    Callback = function(Value)
        print("Slider:", Value)
    end
})

-- Dropdown
MainSection:AddDropdown("TestDropdown", {
    Title = "Test Dropdown",
    Description = "Select an option!",
    Values = {"Option 1", "Option 2", "Option 3"},
    Multi = false,
    Default = "Option 1",
    Callback = function(Value)
        print("Selected:", Value)
    end
})

-- Multi-Dropdown
MainSection:AddDropdown("TestMultiDropdown", {
    Title = "Multi Dropdown",
    Description = "Select multiple!",
    Values = {"Item A", "Item B", "Item C", "Item D"},
    Multi = true,
    Default = {"Item A"},
    Callback = function(Value)
        print("Multi-Selected:", table.concat(Value, ", "))
    end
})

-- Input/TextBox
MainSection:AddInput("TestInput", {
    Title = "Test Input",
    Description = "Type something!",
    Default = "Hello World",
    Placeholder = "Enter text...",
    Numeric = false,
    Callback = function(Value)
        print("Input:", Value)
    end
})

-- Numeric Input
MainSection:AddInput("TestNumericInput", {
    Title = "Numeric Input",
    Description = "Numbers only!",
    Default = "123",
    Placeholder = "Enter number...",
    Numeric = true,
    Callback = function(Value)
        print("Number:", Value)
    end
})

SaveManager:SetLibrary(Library)
InterfaceManager:SetLibrary(Library)
SaveManager:SetFolder("MyScript/Configs")
InterfaceManager:SetFolder("MyScript/Interface")

SaveManager:BuildConfigSection(SettingsTab)
InterfaceManager:BuildInterfaceSection(SettingsTab)

SaveManager:LoadAutoloadConfig()
